# Copyright (C) 2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//base/notification/distributed_notification_service/notification.gni")
import("//build/ohos.gni")

ohos_shared_library("cj_notification_manager_ffi") {
  sanitize = {
    integer_overflow = true
    ubsan = true
    boundary_sanitize = true
    cfi = true
    cfi_cross_dso = true
    debug = false
  }
  branch_protector_ret = "pac_ret"

  include_dirs = [
    "include",
    "srcold",
    "${component_path}/interfaces/inner_api",
    "${component_path}/frameworks/core/common/include",
  ]

  if (!defined(defines)) {
    defines = []
  }

  use_exceptions = true

  deps = [ "${frameworks_module_ans_path}:ans_innerkits" ]

  external_deps = [
    "ability_base:want",
    "ability_base:zuri",
    "ability_runtime:ability_manager",
    "ability_runtime:abilitykit_native",
    "ability_runtime:data_ability_helper",
    "c_utils:utils",
    "hilog:libhilog",
    "image_framework:cj_image_ffi",
    "ipc:ipc_core",
    "napi:ace_napi",
    "napi:cj_bind_ffi",
    "napi:cj_bind_native",
  ]

  sources = [
    "src/inner_errors.cpp",
    "src/notification_manager_ffi.cpp",
    "src/notification_manager_impl.cpp",
    "src/notification_utils.cpp",
    "srcold/cj_notification_manager_ffi.cpp",
    "srcold/cj_notification_manager_impl.cpp",
  ]

  if (current_os == "ohos") {
    defines += [ "OHOS_PLATFORM" ]
  }

  if (current_os == "mingw") {
    defines += [ "WINDOWS_PLATFORM" ]
  }

  innerapi_tags = [ "platformsdk" ]
  subsystem_name = "${subsystem_name}"
  part_name = "${component_name}"
}
