# Copyright (c) 2021-2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//base/notification/distributed_notification_service/notification.gni")
import("//build/ohos.gni")

group("ans_client") {
  deps = [ ":ans_innerkits" ]
}

config("ans_innerkits_public_config") {
  visibility = [ "./../../*" ]

  include_dirs = [
    "${inner_api_path}",
    "${interfaces_path}/kits/native",
    "${core_path}/common/include",
    "${core_path}/include",
    "//third_party/json/single_include",
  ]
  configs = [ "${multimedia_path}/interfaces/innerkits:image_external_config" ]
}

ohos_shared_library("ans_innerkits") {
  sanitize = {
    integer_overflow = true
    ubsan = true
    boundary_sanitize = true
    cfi = true
    cfi_cross_dso = true
    debug = false
  }
  branch_protector_ret = "pac_ret"

  include_dirs = [ "${inner_api_path}" ]

  sources = [
    "${core_path}/common/src/ans_convert_enum.cpp",
    "${core_path}/common/src/ans_log_wrapper.cpp",
    "${core_path}/common/src/ans_watchdog.cpp",
    "${core_path}/src/ans_dialog_callback_interface.cpp",
    "${core_path}/src/ans_dialog_callback_proxy.cpp",
    "${core_path}/src/ans_dialog_callback_stub.cpp",
    "${core_path}/src/ans_image_util.cpp",
    "${core_path}/src/ans_manager_death_recipient.cpp",
    "${core_path}/src/ans_manager_proxy.cpp",
    "${core_path}/src/ans_manager_proxy_disturb.cpp",
    "${core_path}/src/ans_manager_proxy_reminder.cpp",
    "${core_path}/src/ans_manager_proxy_slot.cpp",
    "${core_path}/src/ans_manager_proxy_subscribe.cpp",
    "${core_path}/src/ans_manager_proxy_utils.cpp",
    "${core_path}/src/ans_manager_stub.cpp",
    "${core_path}/src/ans_manager_stub_invalid.cpp",
    "${core_path}/src/ans_notification.cpp",
    "${core_path}/src/ans_subscriber_local_live_view_proxy.cpp",
    "${core_path}/src/ans_subscriber_local_live_view_stub.cpp",
    "${core_path}/src/ans_subscriber_proxy.cpp",
    "${core_path}/src/ans_subscriber_stub.cpp",
    "${core_path}/src/swing_callback_proxy.cpp",
    "${core_path}/src/swing_callback_stub.cpp",
    "${frameworks_module_ans_path}/src/ans_dialog_host_client.cpp",
    "${frameworks_module_ans_path}/src/badge_number_callback_data.cpp",
    "${frameworks_module_ans_path}/src/enabled_notification_callback_data.cpp",
    "${frameworks_module_ans_path}/src/message_user.cpp",
    "${frameworks_module_ans_path}/src/notification.cpp",
    "${frameworks_module_ans_path}/src/notification_action_button.cpp",
    "${frameworks_module_ans_path}/src/notification_basic_content.cpp",
    "${frameworks_module_ans_path}/src/notification_bundle_option.cpp",
    "${frameworks_module_ans_path}/src/notification_button_option.cpp",
    "${frameworks_module_ans_path}/src/notification_capsule.cpp",
    "${frameworks_module_ans_path}/src/notification_check_info.cpp",
    "${frameworks_module_ans_path}/src/notification_check_request.cpp",
    "${frameworks_module_ans_path}/src/notification_constant.cpp",
    "${frameworks_module_ans_path}/src/notification_content.cpp",
    "${frameworks_module_ans_path}/src/notification_conversational_content.cpp",
    "${frameworks_module_ans_path}/src/notification_conversational_message.cpp",
    "${frameworks_module_ans_path}/src/notification_distributed_options.cpp",
    "${frameworks_module_ans_path}/src/notification_do_not_disturb_date.cpp",
    "${frameworks_module_ans_path}/src/notification_do_not_disturb_profile.cpp",
    "${frameworks_module_ans_path}/src/notification_flags.cpp",
    "${frameworks_module_ans_path}/src/notification_helper.cpp",
    "${frameworks_module_ans_path}/src/notification_live_view_content.cpp",
    "${frameworks_module_ans_path}/src/notification_local_live_view_button.cpp",
    "${frameworks_module_ans_path}/src/notification_local_live_view_content.cpp",
    "${frameworks_module_ans_path}/src/notification_local_live_view_subscriber.cpp",
    "${frameworks_module_ans_path}/src/notification_long_text_content.cpp",
    "${frameworks_module_ans_path}/src/notification_media_content.cpp",
    "${frameworks_module_ans_path}/src/notification_multiline_content.cpp",
    "${frameworks_module_ans_path}/src/notification_normal_content.cpp",
    "${frameworks_module_ans_path}/src/notification_picture_content.cpp",
    "${frameworks_module_ans_path}/src/notification_progress.cpp",
    "${frameworks_module_ans_path}/src/notification_request.cpp",
    "${frameworks_module_ans_path}/src/notification_slot.cpp",
    "${frameworks_module_ans_path}/src/notification_sorting.cpp",
    "${frameworks_module_ans_path}/src/notification_sorting_map.cpp",
    "${frameworks_module_ans_path}/src/notification_subscribe_info.cpp",
    "${frameworks_module_ans_path}/src/notification_subscriber.cpp",
    "${frameworks_module_ans_path}/src/notification_template.cpp",
    "${frameworks_module_ans_path}/src/notification_time.cpp",
    "${frameworks_module_ans_path}/src/notification_unified_group_info.cpp",
    "${frameworks_module_ans_path}/src/notification_user_input.cpp",
    "${frameworks_module_ans_path}/src/push_callback_stub.cpp",
    "${frameworks_module_ans_path}/src/push_promise_callback.cpp",
    "${frameworks_module_ans_path}/src/reminder_helper.cpp",
    "${frameworks_module_ans_path}/src/reminder_request.cpp",
    "${frameworks_module_ans_path}/src/reminder_request_alarm.cpp",
    "${frameworks_module_ans_path}/src/reminder_request_calendar.cpp",
    "${frameworks_module_ans_path}/src/reminder_request_timer.cpp",
    "${frameworks_module_ans_path}/src/reminder_store.cpp",
    "${frameworks_module_ans_path}/src/reminder_table.cpp",
    "${frameworks_module_ans_path}/src/reminder_table_old.cpp",
  ]

  public_configs = [ ":ans_innerkits_public_config" ]

  defines = []

  external_deps = [
    "ability_base:want",
    "ability_base:zuri",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "c_utils:utils",
    "eventhandler:libeventhandler",
    "hicollie:libhicollie",
    "hilog:libhilog",
    "i18n:intl_util",
    "ipc:ipc_core",
    "os_account:os_account_innerkits",
    "relational_store:native_rdb",
    "samgr:samgr_proxy",
    "time_service:time_client",
  ]

  public_external_deps = [
    "ability_runtime:wantagent_innerkits",
    "image_framework:image_native",
  ]

  if (is_double_framework) {
    cflags = [ "-DCONFIG_DUAL_FRAMEWORK" ]
  }

  if (ans_hitrace_usage) {
    external_deps += [ "hitrace:hitrace_meter" ]
    defines += [ "HITRACE_METER_ENABLE" ]
  }

  if (notification_smart_reminder_supported) {
    defines += [ "NOTIFICATION_SMART_REMINDER_SUPPORTED" ]
  }

  innerapi_tags = [ "platformsdk" ]
  subsystem_name = "${subsystem_name}"
  part_name = "${component_name}"
}
