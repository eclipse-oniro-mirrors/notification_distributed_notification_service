# Copyright (c) 2021-2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//base/notification/distributed_notification_service/notification.gni")
import("//build/ohos.gni")
import("//build/test.gni")

module_output_path = "${component_name}/unittest"

config("exception") {
  cflags_cc = [ "-fexceptions" ]
}

ohos_unittest("ans_reminder_unit_test") {
  module_out_path = module_output_path

  include_dirs = [
    ".",
    "include",
    "//utils/native/base/include",
    "//utils/system/safwk/native/include",
    "/${services_path}/ans/include",
    "${services_path}/ans/test/unittest/mock/include",
  ]

  sources = [
    "${frameworks_module_ans_path}/test/unittest/reminder_request_alarm_test.cpp",
    "${frameworks_module_ans_path}/test/unittest/reminder_request_calendar_test.cpp",
    "${frameworks_module_ans_path}/test/unittest/reminder_request_test.cpp",
    "${frameworks_module_ans_path}/test/unittest/reminder_request_timer_test.cpp",
  ]

  configs = [
    "//utils/native/base:utils_config",
    ":exception",
  ]

  deps = [
    "${core_path}:ans_core",
    "${frameworks_module_ans_path}:ans_innerkits",
    "//third_party/googletest:gtest_main",
    "//utils/native/base:utils",
  ]

  external_deps = [
    "ability_base:want",
    "ability_base:zuri",
    "ability_runtime:wantagent_innerkits",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "common_event_service:cesfwk_innerkits",
    "distributeddatamgr:distributeddata_inner",
    "eventhandler:libeventhandler",
    "hitrace_native:hitrace_meter",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
    "multimedia_image_standard:image_native",
    "relational_store:native_rdb",
    "safwk:system_ability_fwk",
    "samgr_standard:samgr_proxy",
  ]

  subsystem_name = "${subsystem_name}"
  part_name = "${component_name}"
}

group("unittest") {
  testonly = true
  deps = []

  deps += [ ":ans_reminder_unit_test" ]
}
