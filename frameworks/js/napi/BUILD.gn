# Copyright (c) 2021-2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//base/notification/distributed_notification_service/notification.gni")
import("//build/ohos.gni")

group("napi_reminder") {
  deps = [
    "src/reminder:reminderagent",
    "src/reminder:reminderagentmanager",
  ]
}

group("napi_notification") {
  deps = [
    ":notification",
    "src/manager:notificationmanager",
    "src/subscribe:notificationsubscribe",
  ]
}

cflags = []

config("native_module_config") {
  visibility = [ ":*" ]

  include_dirs = []

  if (target_cpu == "arm") {
    cflags += [ "-DBINDER_IPC_32BIT" ]
  }
}

ohos_shared_library("notification") {
  sanitize = {
    integer_overflow = true
    ubsan = true
    boundary_sanitize = true
    cfi = true
    cfi_cross_dso = true
    debug = false
  }
  branch_protector_ret = "pac_ret"

  include_dirs = [
    "${ability_runtime_path}/interfaces/kits/native/ability/native",
    "${ability_runtime_napi_path}/inner/napi_common",
    "include",
    "//third_party/node/src",
    "//third_party/libuv/include",
    "//third_party/json/single_include",
  ]

  configs = [ ":native_module_config" ]

  sources = [
    "src/ans_template.cpp",
    "src/cancel.cpp",
    "src/common.cpp",
    "src/common_convert_content.cpp",
    "src/common_convert_liveview.cpp",
    "src/common_convert_notification.cpp",
    "src/common_convert_request.cpp",
    "src/common_utils.cpp",
    "src/constant.cpp",
    "src/display_badge.cpp",
    "src/distributed.cpp",
    "src/disturb_mode.cpp",
    "src/enable_notification.cpp",
    "src/get_active.cpp",
    "src/init.cpp",
    "src/js_ans_dialog_callback.cpp",
    "src/publish.cpp",
    "src/remove.cpp",
    "src/slot.cpp",
    "src/subscribe.cpp",
    "src/unsubscribe.cpp",
  ]

  deps = [ "${frameworks_module_ans_path}:ans_innerkits" ]

  external_deps = [
    "ability_base:want",
    "ability_base:zuri",
    "ability_runtime:ability_manager",
    "ability_runtime:abilitykit_native",
    "ability_runtime:app_context",
    "ability_runtime:napi_common",
    "ability_runtime:wantagent_innerkits",
    "c_utils:utils",
    "hilog:libhilog",
    "image_framework:image",
    "napi:ace_napi",
    "relational_store:native_rdb",
  ]

  relative_install_dir = "module"
  subsystem_name = "${subsystem_name}"
  part_name = "${component_name}"
}
