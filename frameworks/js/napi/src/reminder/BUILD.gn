# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//base/notification/distributed_notification_service/notification.gni")
import("//build/ohos.gni")

cflags = []

config("native_module_config") {
  visibility = [ ":*" ]

  include_dirs = []

  if (target_cpu == "arm") {
    cflags += [ "-DBINDER_IPC_32BIT" ]
  }

  cflags += [ "-Wno-error=deprecated-declarations" ]

  defines = [
    "APP_LOG_TAG = \"NOTIFICATION_REMINDER\"",
    "LOG_DOMAIN = 0xD001800",
  ]
}

ohos_shared_library("reminderagent") {
  include_dirs = [
    "${ability_runtime_path}/interfaces/kits/native/ability/native",
    "${ability_runtime_napi_path}/inner/napi_common",
    "//foundation/multimedia/image_standard/interfaces/kits/js/common/include/",
    "../../include",
    "//third_party/node/src",
    "//third_party/libuv/include",
    "//third_party/jsoncpp/include",
  ]

  configs = [ ":native_module_config" ]

  sources = [
    "../common.cpp",
    "../slot.cpp",
    "native_module.cpp",
    "publish.cpp",
    "reminder_common.cpp",
  ]

  deps = [
    "${ability_runtime_napi_path}/inner/napi_common:napi_common",
    "${core_path}:ans_core",
    "${frameworks_module_ans_path}:ans_innerkits",
    "//foundation/multimedia/image_standard/interfaces/innerkits:image",
    "//third_party/jsoncpp:jsoncpp",
    "//third_party/libuv:uv_static",
    "//utils/native/base:utils",
  ]

  external_deps = [
    "ability_base:want",
    "ability_base:zuri",
    "ability_runtime:abilitykit_native",
    "ability_runtime:wantagent_innerkits",
    "bundle_framework:appexecfwk_base",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
    "napi:ace_napi",
    "relational_store:native_rdb",
  ]

  relative_install_dir = "module"
  subsystem_name = "${subsystem_name}"
  part_name = "${component_name}"
}
