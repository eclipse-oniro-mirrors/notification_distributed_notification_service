# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//base/notification/distributed_notification_service/notification.gni")
import("//build/ohos.gni")

ohos_shared_library("notification_subscriber_extension") {
  sanitize = {
    integer_overflow = true
    ubsan = true
    boundary_sanitize = true
    cfi = true
    cfi_cross_dso = true
    debug = false
  }
  branch_protector_ret = "pac_ret"

  include_dirs = [
    "${frameworks_module_extension_path}/include",
    "${frameworks_path}/js/napi/include",
    "${frameworks_path}/js/napi/include/extension",
  ]

  sources = [
    "${frameworks_path}/js/napi/src/common_utils.cpp",
    "common_convert_notification_info.cpp",
    "js_notification_subscriber_extension.cpp",
    "js_notification_subscriber_extension_context.cpp",
  ]

  deps = [
    "${frameworks_module_ans_path}:ans_innerkits",
    "${frameworks_module_extension_path}:notification_subscriber_extension_common",
    "${frameworks_module_extension_path}:notification_subscriber_ipc",
  ]

  external_deps = [
    "ability_base:want",
    "ability_runtime:ability_context_native",
    "ability_runtime:ability_manager",
    "ability_runtime:app_context",
    "ability_runtime:extensionkit_native",
    "ability_runtime:napi_common",
    "ability_runtime:runtime",
    "access_token:libaccesstoken_sdk",
    "access_token:libtokenid_sdk",
    "c_utils:utils",
    "eventhandler:libeventhandler",
    "ffrt:libffrt",
    "hilog:libhilog",
    "image_framework:image",
    "ipc:ipc_core",
    "ipc:ipc_napi",
    "napi:ace_napi",
  ]

  subsystem_name = "${subsystem_name}"
  part_name = "${component_name}"
}

ohos_shared_library("notification_subscriber_extension_module") {
  sanitize = {
    integer_overflow = true
    ubsan = true
    boundary_sanitize = true
    cfi = true
    cfi_cross_dso = true
    debug = false
  }
  branch_protector_ret = "pac_ret"

  include_dirs = [
    "${frameworks_module_extension_path}/include",
    "${frameworks_path}/js/napi/include/extension/loader",
    "${frameworks_path}/js/napi/include/extension",
  ]

  sources = [ "./loader/notification_subscriber_extension_module_loader.cpp" ]

  deps = [
    ":notification_subscriber_extension",
    "${frameworks_module_ans_path}:ans_innerkits",
  ]

  external_deps = [
    "ability_base:configuration",
    "ability_base:session_info",
    "ability_runtime:ability_manager",
    "ability_runtime:app_context",
    "ability_runtime:extensionkit_native",
    "ability_runtime:runtime",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "c_utils:utils",
    "hilog:libhilog",
    "ipc:ipc_core",
    "ipc:ipc_napi",
    "napi:ace_napi",
  ]

  relative_install_dir = "extensionability"
  subsystem_name = "${subsystem_name}"
  part_name = "${component_name}"
}
