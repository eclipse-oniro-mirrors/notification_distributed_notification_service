# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//base/notification/distributed_notification_service/notification.gni")
import("//build/config/components/idl_tool/idl.gni")

idl_gen_interface("notification_subscriber_interface") {
  sources = [ "INotificationSubscriber.idl" ]
  log_domainid = "0xD001203"
  log_tag = "Ans"
  subsystem_name = "notification"
  part_name = "distributed_notification_service"
}

config("notification_subscriber_ipc_public_config") {
  visibility = [ ":*" ]

  include_dirs = [ "${target_gen_dir}" ]
}

ohos_source_set("notification_subscriber_proxy") {
  sanitize = {
    integer_overflow = true
    ubsan = true
    boundary_sanitize = true
    cfi = true
    cfi_cross_dso = true
    debug = false
  }
  public_configs = [ ":notification_subscriber_ipc_public_config" ]
  output_values = get_target_outputs(":notification_subscriber_interface")
  sources = filter_include(output_values, [ "*_proxy.cpp" ])
  deps = [
    ":notification_subscriber_interface",
    "${frameworks_module_ans_path}:ans_innerkits",
  ]
  external_deps = [
    "ability_base:want",
    "c_utils:utils",
    "hilog:libhilog",
    "ipc:ipc_core",
  ]
  subsystem_name = "notification"
  part_name = "distributed_notification_service"
}

ohos_source_set("notification_subscriber_stub") {
  sanitize = {
    integer_overflow = true
    ubsan = true
    boundary_sanitize = true
    cfi = true
    cfi_cross_dso = true
    debug = false
  }
  public_configs = [ ":notification_subscriber_ipc_public_config" ]
  output_values = get_target_outputs(":notification_subscriber_interface")
  sources = filter_include(output_values, [ "*_stub.cpp" ])
  deps = [
    ":notification_subscriber_interface",
    "${frameworks_module_ans_path}:ans_innerkits",
  ]
  external_deps = [
    "ability_base:want",
    "c_utils:utils",
    "hilog:libhilog",
    "ipc:ipc_core",
  ]
  subsystem_name = "notification"
  part_name = "distributed_notification_service"
}

ohos_shared_library("notification_subscriber_ipc") {
  sanitize = {
    integer_overflow = true
    ubsan = true
    boundary_sanitize = true
    cfi = true
    cfi_cross_dso = true
    debug = false
  }
  branch_protector_ret = "pac_ret"

  include_dirs = []

  sources = []

  configs = []
  public_configs = [ ":notification_subscriber_ipc_public_config" ]

  deps = [
    ":notification_subscriber_proxy",
    ":notification_subscriber_stub",
    "${frameworks_module_ans_path}:ans_innerkits",
  ]

  external_deps = [
    "ability_base:want",
    "ability_base:zuri",
    "c_utils:utils",
    "hilog:libhilog",
    "ipc:ipc_core",
  ]

  subsystem_name = "notification"
  part_name = "distributed_notification_service"
}
